name: "TEST [JAVA] WC"
#type: REUSABLE WORKFLOW (WC = workflow_call)

on:
  workflow_call:
    inputs:
      ref:
        type: string
        description: "[ref] e.g. branch, tag or commit to checkout [default: github_ref_name || github_head_ref ]"
        required: false
      skip_test:
        description: "[skip_test] skips tests when 'true'"
        type: string
        required: false
    secrets:
      G_TOKEN:
        description: "Github token"
        required: false
      CC_TEST_REPORTER_ID:
        description: "Code Climate Id for test coverage and quality checks"
        required: false

jobs:
  test:
    name: "Run tests"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "Read Input"
        id: "inputs"
        run: |
          echo ""
          echo "--------------------- BRANCH -------------------"
          ref_default=${{ github.ref_name || github.head_ref }}
          ref="${ref_A:-${ref_B:-${ref_C:-${ref_default}}}}"
          echo "ref [${ref}]"
          echo "ref=${ref}" >> $GITHUB_OUTPUT
          echo "--------------------- SKIP_TEST ----------------"
          skip_test="${skip_test_A:-${skip_test_B:-${skip_test_C:false}}}"
          echo "skip_test [${skip_test}]"
          echo "skip_test=${skip_test}" >> $GITHUB_OUTPUT
          echo "--------------------- CODE_CLIMATE -------------"
          has_publish_to_code_climate=$(if [[ "${{secrets.CC_TEST_REPORTER_ID}}" == "" ]]; then echo "false"; else echo "true"; fi)
          echo "has_publish_to_code_climate [${has_publish_to_code_climate}]"
          echo "has_publish_to_code_climate=${has_publish_to_code_climate}" >> $GITHUB_OUTPUT
          echo "--------------------- ENVS ---------------------"
          env
        env:
          ref_A: ${{ inputs.ref }}
          ref_B: ${{ github.event.inputs.ref }}
          ref_C: ${{ github.event.client_payload.ref }}
          skip_test_A: ${{ inputs.skip_test }}
          skip_test_B: ${{ github.event.inputs.skip_test }}
          skip_test_C: ${{ github.event.client_payload.skip_test }}
      - name: "Checkout"
        if: ${{ inputs.skip_test != 'true' }}
        uses: actions/checkout@main
        with:
          fetch-depth: 5
          ref: ${{ steps.inputs.outputs.ref }}
          token: ${{ secrets.G_TOKEN || secrets.CI_TOKEN_WORKFLOW || github.token }}
      - name: "Read Java Info"
        id: "java_info"
        if: ${{ inputs.skip_test != 'true' }}
        uses: YunaBraska/java-info-action@main
      - name: "Setup Java"
        if: ${{ inputs.skip_test != 'true' }}
        uses: actions/setup-java@main
        with:
          java-version: ${{ steps.java_info.outputs.java_version }}
          distribution: 'adopt'
      - name: "Resolve Dependencies & Plugins"
        run: |
          ${{ steps.java_info.outputs.cmd_resolve_deps }}
          ${{ steps.java_info.outputs.cmd_resolve_plugs }}
      - name: "Test & Build"
        if: ${{ inputs.skip_test != 'true' }}
        run: ${{ steps.java_info.outputs.cmd_test_build }}
      - name: "Code Climate [Jacoco]"
        uses: paambaati/codeclimate-action@v3.2.0
        if: steps.inputs.outputs.has_publish_to_code_climate == 'true'
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
          JACOCO_SOURCE_PATH: "${{github.workspace}}/src/main/java"
        with:
          coverageLocations: ${{github.workspace}}/target/site/jacoco/jacoco.xml:jacoco
